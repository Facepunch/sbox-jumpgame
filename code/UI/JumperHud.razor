
@inherits Panel;

<root>
	<div class="stats">
		<label class="height">@Height</label>
		<label class="maxheight">@MaxHeight</label>
	</div>

	<div class="bar">
				<label class="heightbar"></label>
				<label class="flag"></label>
				
				<div class="heightbarpos"style="height:@IntOut;">
						<label class="heighttext" text="< @Height"</label>
					</div>
					
				<div class="maxheightbarpos" style="height:@MaxIntOut;">
						<label class="maxheighttext" text="@MaxHeight >"</label>
					</div>
		</div>
		
	</div>
	
</root>

@code
{
	private float Height { get; set; }
	private float MaxHeight { get; set; }

	public int IntValue{ get; set; }
	public string IntOut{ get; set; }

	public int MaxIntValue { get; set; }
	public string MaxIntOut { get; set; }

	public override void Tick()
	{
		base.Tick();

		if (Local.Pawn is not JumperPawn pawn)
			return;
		IntValue = (int)Height * 100 / 3265;
		IntValue = IntValue.Clamp(0, 100);
		IntOut = $"{IntValue}%";

		MaxIntValue = Math.Max(IntValue, MaxIntValue);
		MaxIntOut = $"{MaxIntValue}%";
		
		MaxHeight = pawn.MaxHeight;
		Height = pawn.Height;

		Log.Info(IntOut);
	}

	protected override int BuildHash()
	{
		return HashCode.Combine(Height, MaxHeight, IntOut, MaxIntOut);
	}
}