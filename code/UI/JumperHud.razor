
@inherits Panel

<root class=@(IsOpen ? "open" : "closed")>
    <div class="bar">
        <label class="heightbar"></label>
        <label class="flag"></label>

        <div class="heightbarpos" style="height:@(CalculateProgress(Height) * 100)%;">
            <label class="heighttext" text="< @(Height)" />
        </div>

        <div class="maxheightbarpos" style="height:@(CalculateProgress(MaxHeight) * 100)%;">
            <label class="maxheighttext" text="@(MaxHeight)  >" />
        </div>
        @foreach (var cl in Game.Clients)
		{
            @if(cl.Id != Game.LocalClient.Id)
            {
                <div class="maxheightotherbarpos" style="border-top: 4px solid @(((cl.Pawn as JumperPawn).rndColor)); height:@(((cl.Pawn as JumperPawn).Height).LerpInverse(0,TotalHeight) * 100)%">
                    <img class="maxheightothertext" style=" box-shadow: 3px 3px @(((cl.Pawn as JumperPawn).rndColor))" src=@($"avatar:{cl.SteamId}")>" />
			</div>
        }
        }
    </div>
</root>

@code
{
    public float StartHeight => JumperGame.Current.StartHeight;
    public float EndHeight => JumperGame.Current.EndHeight;
    public float TotalHeight => JumperGame.Current.MapLength;
    public float Height => (Game.LocalPawn as JumperPawn)?.Height ?? 0;
    public float MaxHeight => (Game.LocalPawn as JumperPawn)?.MaxHeight ?? 0;
    bool IsOpen { get; set; }
    public Color32 rndColor = Color.Random;
    public string hexColor;

    private float CalculateProgress(float height)
    {
        return height.LerpInverse(0, TotalHeight);
    }
    protected override int BuildHash()
    {
        //var result = Input.Pressed(InputButton.Slot1).GetHashCode();


        IsOpen ^= Input.Pressed(InputButton.Slot1);

        return HashCode.Combine(IsOpen, Height, MaxHeight, string.Join("", Game.Clients.Select(x => x.Pawn as JumperPawn).Select(x => x.Height)));
    }
}
