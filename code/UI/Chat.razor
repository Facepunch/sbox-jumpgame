@inherits Panel

<root class=@RootClass>
    <textentry @onblur=@InputBlurred @onsubmit=@InputSubmitted @ref="TextEntry"></textentry>
    <div @ref="Entries" class="entries">
        <div style="flex-grow: 1;"></div>
    </div>

</root>

@code {
    public Panel Entries { get; set; }
    public TextEntry TextEntry { get; set; }

    private bool IsOpen { get; set; }
    private string RootClass => IsOpen ? "open" : string.Empty;

    protected override void OnAfterTreeRender(bool firstTime)
    {
        base.OnAfterTreeRender(firstTime);

        Entries.PreferScrollToBottom = true;
    }

    private void InputBlurred()
    {
        IsOpen = false;
        RemoveClass("open");
        StateHasChanged();
    }

    private void InputSubmitted()
    {
        var msg = TextEntry.Text;
        TextEntry.Text = string.Empty;

        if (string.IsNullOrWhiteSpace(msg))
            return;

        msg = msg.Trim();
        JumperGame.SendChat(msg);
    }

    [Event("chat.received")]
    private async void AddChatEntry(string name, string message)
    {
        var entry = new ChatEntry()
            {
                Name = name,
                Message = message
            };
        Entries.AddChild(entry);
    }

    [ConCmd.Admin("jump_debug_chat_msg")]
    public static void DebugMsg()
    {
        var cl = ConsoleSystem.Caller;

        JumperGame.ReceiveChat(To.Everyone, cl.Name, "has joined the game");
        JumperGame.ReceiveChat(To.Everyone, cl.Name, "We get it almost every night And when that moon gets big and bright");
    }

    [ConCmd.Admin("jump_debug_chat_other")]
    public static void DebugMsgOther()
    {
        JumperGame.ReceiveChat(To.Everyone, "Eagle One Development Team", "has joined the game");
        JumperGame.ReceiveChat(To.Everyone, "Eagle One Development Team", "what's up");
        JumperGame.ReceiveChat(To.Everyone, "Eagle One Development Team", "We get it almost every night And when that moon gets big and bright");
    }

    [Event.Client.BuildInput]
    private void OnBuildInput()
    {
        if ( Sandbox.Input.Pressed( InputButton.Chat ) )
        {
            IsOpen = true;
            TextEntry.Focus();
            StateHasChanged();
			AddClass( "open" );
        }
    }
}
