@using Sandbox;
@using System.Linq;
@using System.Threading.Tasks;
@using Sandbox.Menu;
@using Sandbox.UI;
@implements Sandbox.Menu.IGameMenuPanel

<root>
    <div class="game-title">
        @Game.Menu.Package.Title
    </div>

    <div class="controls">
        @if (Game.InGame)
        {
            <a class="button" onclick=@LeaveGame>Leave</a>
        }
        else
        {
            <a class="button" href="/setup">Play</a>
            <div class="button" onclick="@OpenServerList">Find Game</div>
			
            @if ( Game.Menu.Package.SupportsSavedGames && Game.Menu.SavedGames.Any())
            {
                <a class="button" href="/setup/save">Load Save</a>
            }
        }

        <a class="button" @onclick=@Game.Menu.Close>Quit</a>
    </div>
</root>

@code
{
    void LeaveGame()
    {
        Game.Menu.LeaveServer( "Leaving" );
    }

    void OpenServerList()
    {
        var options = new Sandbox.Modals.ServerListModalOptions();
        options.ModalTitle = "Find Game";
        options.TargetGame = "facepunch.platformer";
        options.OnSelected = (server) =>
        {
            Game.Menu.ConnectToServer(server.SteamId);
        };

        Game.Overlay.ShowServerList(options);
    }
}