
@inherits Panel

<root class="@(Open ? "open" : "closed")">
    <image class="dance" src="@imageSequence" </image>
    <label class="header">Congratulations!</label>
    <label class="header" style="top: 37%; font-size:24px;">You made it to the top!</label>
    <button onclick="@Restart">Restart</button>
    <button onclick="@GoToTop">Go to top</button>
    <label class="header" style="top: 60%; font-size:24px;">Completions @Completions</label>
</root>

@code {
    public bool Open { get; set; }
    private int? Completions => (Game.LocalPawn as JumperPawn)?.Completions;
    private JumperPawn? Pawn => (Game.LocalPawn as JumperPawn);
    private string imageSequence { get; set; }
    private TimeSince sinceLastFrame { get; set; }
    private int frame { get; set; }
    private float maxframe { get; set; } = 6f;
    private float frameLength { get; set; } = .1f;


    protected override int BuildHash()
    {
        return HashCode.Combine(imageSequence, Open ? 1 : 0);
    }

    [Event.Client.Frame]
    public void Animate()
    {
        if (!Open) return;
        if (sinceLastFrame > frameLength)
        {
            if (frame == maxframe)
            {
                sinceLastFrame = 1;
                frame = 0;
            }
            else
            {
                frame++;
                sinceLastFrame = 0;
            }
        }

        imageSequence = "ui/ending/danduw_" + (int)frame + ".png";
    }

    private void Restart()
    {
        var spawnpoint = Entity.All.OfType<SpawnPoint>().FirstOrDefault();
        if( spawnpoint != null )
        {
            JumperGame.SetPlayerPosition(spawnpoint.Position + Vector3.Up * 10);
            Pawn.ResetStats();
        }
    }

    private void GoToTop()
    {
        var uitrig = Entity.All.OfType<UiOverlayTrigger>().FirstOrDefault();
        if (uitrig != null)
        {
            var ent = Entity.FindByName(uitrig.TopEntity);
            if(ent != null)
            {
                JumperGame.SetPlayerPosition(ent.Position + Vector3.Up * 10);
            }
        }
    }
}
