
@inherits Panel;

<root class=@(Visible ? "visible" : "")>
        <label class="message">@OutputText</label>

</root>

@code {
    public string Message { get; set; } = "";

    private bool Visible => TimeSinceDisplayed < 4;
    private TimeSince TimeSinceDisplayed;
    private static NPCTalk Instance;

    public string OutputText { get; set; }
    public float Delay { get; set; } = .1f;


    public NPCTalk()
    {
        Instance = this;
    }

    public static bool IsTalking()
    {
        return true;
    }

    public static void Display(string message)
    {
        if (Instance.Visible) return;

        Instance.Message = message;
        Instance.OutputText = null;
    }

    private async Task RevealTextAsync(string message)
    {
        Random rand = new Random();
        foreach (char c in message)
        {
            IsTalking();
            Instance.OutputText += c;
            Instance.TimeSinceDisplayed = 0f;
            await Task.DelaySeconds((float)GetRandomNumber(0.05f, 0.2f));
            Sound.FromScreen("beep1").SetPitch((float)GetRandomNumber(1.1f, 0.9f));
        }
    }

    static Random random = new Random();
    public double GetRandomNumber(double minimum, double maximum)
    {
        return random.NextDouble() * (maximum - minimum) + minimum;
    }


    public override void Tick()
    {
        if (OutputText == Message)
        {
			return;
		}

        if (OutputText == null)
        {
            Instance.RevealTextAsync(Message);
        }
        Instance.Message = OutputText;
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(OutputText, Visible ? 1 : 0);
    }

}
